parameter (or (pair address
                    (contract (or (pair address
                                        (pair address
                                              nat))
                                  address)))
              nat);
storage (pair (big_map address
                       (pair mutez
                             address))
              unit);
code { DUP;
       CAR;
       DIP { CDR };
       IF_LEFT { DUP;
                 CDR;
                 DIP { SWAP };
                 DIP { SENDER;
                       CONTRACT (or (or (pair nat (pair nat timestamp)) (pair (pair nat mutez) (pair nat timestamp))) (or (pair nat timestamp) (or (pair nat (pair mutez timestamp)) nat)));
                       IF_NONE { PUSH string "addLiquidityToGetBalance: sender contract does not match the expected type.";
                                 FAILWITH }
                               {  } };
                 ADDRESS;
                 DIP { ADDRESS;
                       AMOUNT;
                       PAIR;
                       SOME;
                       DIP { DUP;
                             CAR } };
                 UPDATE;
                 DIP { DUP;
                       DIP { CDR };
                       CAR };
                 DIP { DROP };
                 PAIR;
                 SWAP;
                 DUP;
                 CAR;
                 RIGHT (pair address (pair address nat));
                 DIP { CDR;
                       PUSH mutez 0 };
                 TRANSFER_TOKENS;
                 NIL operation;
                 SWAP;
                 CONS;
                 PAIR }
               { RIGHT (pair nat (pair mutez timestamp));
                 RIGHT (pair nat timestamp);
                 RIGHT (or (pair nat (pair nat timestamp)) (pair (pair nat mutez) (pair nat timestamp)));
                 DIP { SENDER;
                       DIP { DUP;
                             CAR };
                       GET;
                       IF_NONE { PUSH string "getBalanceToAddLiquidity: unexpected, exchange not found for existing token contract.";
                                 FAILWITH }
                               {  };
                       DUP;
                       CAR;
                       DIP { CDR };
                       DIP { CONTRACT (or (or (pair nat (pair nat timestamp)) (pair (pair nat mutez) (pair nat timestamp))) (or (pair nat timestamp) (or (pair nat (pair mutez timestamp)) nat)));
                             IF_NONE { PUSH string "getBalanceToAddLiquidity: exchange contract does not match the expected type.";
                                       FAILWITH }
                                     {  } } };
                 TRANSFER_TOKENS;
                 NIL operation;
                 SWAP;
                 CONS;
                 PAIR } };